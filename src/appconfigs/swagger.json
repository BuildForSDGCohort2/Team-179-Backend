{
  "openapi": "3.0.1",
  "info": {
    "title": "Welcome Agri-Vesty API",
    "description": "Agri-vesty is a crowdfunding Platform. The aim of Agri-vesty is to help farmers to raise farming capital. In this platform, a user can either create a crowdfunding farming project or invest money towards their favorite farming projects.",
    "contact": {
      "name": "Team-179-Group-A",
      "url": "https://agri-vesty.herokuapp.com/"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:{port}/{basePath}",
      "description": "Local server",
      "variables": {
        "port": {
          "enum": [
            "8443",
            "443"
          ],
          "default": "4000"
        },
        "basePath": {
          "default": "api"
        }
      }
    },
    {
      "url": "https://agri-vesty.herokuapp.com/{basePath}",
      "description": "Production server",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "API Login and Register routes"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Farm",
      "description": "Farm endpoints"
    },
    {
      "name": "Projects",
      "description": "Project endpoints"
    },

    {
      "name": "Payment",
      "description": "Payment endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "components": {
    "schemas": {
      "GeneralError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          },
          "bios": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "idNumber": {
            "type": "string"
          },
          "kraPin": {
            "type": "string"
          },
          "certificateOfConduct": {
            "type": "string"
          }
        }
      },
      "projects": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dateStarted": {
            "type": "string",
            "format": "date-time"
          },
          "dateEnded": {
            "type": "string",
            "format": "date-time"
          },
          "targetCost": {
            "type": "number",
            "format": "double"
          },
          "totalInvested": {
            "type": "number",
            "format": "double"
          },
          "active": {
            "type": "boolean"
          },
          "isWithdrawable": {
            "type": "boolean"
          }
        }
      },
      "farms": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "item": {
              "type": "string"
            }
          },
          "landForm": {
            "type": "string"
          },
          "landTenure": {
            "type": "string"
          },
          "irrigationType": {
            "type": "string"
          },
          "soilType": {
            "type": "string"
          },
          "soilDepth": {
            "type": "string"
          },
          "landSize": {
            "type": "string"
          },
          "accessibility": {
            "type": "boolean"
          },
          "location": {
            "type": "array",
            "items": {
              "type": "object",
              "county": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              },
              "geoLocation": {
                "type": "string"
              }
            }
          }
        }
      },
      "RefreshTokens": {
        "type": "object",
        "properties": {
          "refToken": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "revoked": {
            "type": "boolean"
          },
          "replaceToken": {
            "type": "string"
          }
        }
      },
      "Auth": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "skipParam": {
        "name": "offset",
        "in": "query",
        "description": "number of items to skip",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "max records to return",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "token to be passed as a header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "style": "simple"
      }
    },
    "securitySchemes":{
      "basic": {
        "type": "http",
        "scheme": "basic"
      },
      "Bearer": {
        "description": "JWT Token",
        "name": "Authorization",
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
      },
      "cookieAuth": {
        "description": "Refresh token",
        "name": "refreshToken",
        "type": "apiKey",
        "in": "cookie"
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "login",
        "summary": "Login user into the system",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User is loggedin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                },
                "example": {
                  "message": "Logged in successfuly",
                  "token": "mnamsnasmanmsnamsnasmasam"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "register",
        "summary": "Register user into the system",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password",
                  "confirmPassword"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "uniqueItems": true
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password",
                  "confirmPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New user registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                },
                "example": {
                  "message": "User Registered successfully",
                  "token": "mnamsnasmanmsnamsnasmasam"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },

    "/user/refresh-tokens": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refreshes user token",
        "operationId": "refreshUserToken",

        "responses": {
          "201": {
            "description": "Refreshes user tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                },
                "example": {
                  "message": "Logged in successfuly",
                  "token": "mnamsnasmanmsnamsnasmasam"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [],
            "cookieAuth": []
          }
        ]
      }
    },
    "/user/refresh-token/list": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Gets users refresh token",
        "operationId": "getRefreshToken",

        "responses": {
          "201": {
            "description": "Get all current logged in user refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokens"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [],
            "cookieAuth": []
          }
        ]
      }
    },
    "/admin/refresh-token/revoke": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Admin revokes user refresh token",
        "operationId": "aminRevokeRefreshToken",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Refresh Token": {
                    "description": "User refresh token to be revoked",
                    "type": "string"
                  }
                },
                "required": ["Refresh Token"]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Refresh Token": {
                    "description": "User refresh token to be revoked",
                    "type": "string"
                  }
                },
                "required": ["Refresh Token"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Admin revokes user refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "int32"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "code": "204",
                  "message": "Successful"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/refresh-token/revoke": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User revokes user refresh token",
        "operationId": "userRevokeRefreshToken",
        "responses": {
          "204": {
            "description": "User revokes user refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "int32"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "code": "204",
                  "message": "Successful"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [],
            "cookieAuth": []
          }
        ]
      }
    },
    "/users/list": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns all users from the api and user must have an auth token to access",
        "operationId": "getAllUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/skipParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "success" : true,
                    "$ref": "#/components/schemas/User",
                    "message": "User fetched successfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Returns user based on ID",
        "summary": "Find user by payload ID",
        "operationId": "getUserById",
        "responses": {
          "200": {
            "description": "Get user profile details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Returns user based on ID",
        "summary": "Find user by payload ID",
        "operationId": "getCurrentUserById",
        "responses": {
          "200": {
            "description": "Get current logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/create-profile": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "createProfile",
        "summary": "Create user additional information",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "bios": {
                    "type": "string"
                  },
                  "roles": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "idNumber": {
                    "type": "string"
                  },
                  "kraPin": {
                    "type": "string"
                  }
                },
                "required": [
                  "phoneNumber",
                  "gender",
                  "dateOfBirth",
                  "idNumber",
                  "kraPin"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "string"
                  },
                  "bios": {
                    "type": "string"
                  },
                  "roles": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-06-22"
                  },
                  "idNumber": {
                    "type": "string"
                  },
                  "kraPin": {
                    "type": "string"
                  }
                },
                "required": [
                  "phoneNumber",
                  "gender",
                  "dateOfBirth",
                  "idNumber",
                  "kraPin"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "Profile created succeessfully",
                  "data": {
                    "$ref": "#/components/schemas/Profile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/update-profile/{profileId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "updateProfile",
        "summary": "Update user information",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "description": "User Profile ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "uniqueItems": true
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "roles": {
                    "type": "string"
                  },
                  "bios": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "idNumber": {
                    "type": "string"
                  },
                  "kraPin": {
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "roles",
                  "phoneNumber",
                  "gender",
                  "dateOfBirth",
                  "idNumber",
                  "kraPin"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "uniqueItems": true
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "roles": {
                    "type": "string"
                  },
                  "bios": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "idNumber": {
                    "type": "string"
                  },
                  "kraPin": {
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "roles",
                  "phoneNumber",
                  "gender",
                  "dateOfBirth",
                  "idNumber",
                  "kraPin"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "Profile updated succeessfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/change-password": {
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "changePassword",
        "summary": "Change user password",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "oldPassword",
                  "password",
                  "confirmPassword"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "password",
                  "confirmPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Changed Password successfully",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "Changed Password successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/forgot-password": {
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "forgotPassword",
        "summary": "reset password",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "uniqueItems": true
                  }
                },
                "required": [
                  "email"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "uniqueItems": true
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Email sent to your email",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "Email sent to your email"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/user/password-reset": {
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "resetPassword",
        "summary": "Reset user password",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "uniqueItems": true
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "code": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "confirmPassword",
                  "code"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "uniqueItems": true
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "code": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "confirmPassword",
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reset Password successful",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "Reset Password successful"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/user/verify-email": {
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "verifyEmail",
        "summary": "Verify user email",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Email Verification Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email Verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "Email Verified successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/resend-verification": {
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "resendVerification",
        "summary": "Resend Email Verification",
        "responses": {
          "201": {
            "description": "Email Verification Sent Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "Email Verification Sent Successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/delete": {
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "deleteUser",
        "summary": "Delete User",
        "responses": {
          "204": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "success": true,
                  "message": "User deleted suscessfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/{farmId}/projects/create-projects": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create farming project",
        "operationId": "createProjects",
        "parameters": [
          {
            "name": "farmId",
            "in": "path",
            "description": "ID of the farm the projects belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "create the title of the project",
                    "type": "string"
                  },
                  "description": {
                    "description": "create the description of your project",
                    "type": "string"
                  },
                  "imageUrl": {
                    "description": "image of your project",
                    "type": "string",
                    "format": "binary"
                  },
                  "targetCost": {
                    "description": "The target amount",
                    "type": "number",
                    "format": "double"
                  },
                  "dateStarted": {
                    "description": "Date you started your project",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateEnded": {
                    "description": "The date your project will end",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "imageUrl",
                  "targetCost",
                  "dateStarted",
                  "dateEnded"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "create the title of the project",
                    "type": "string"
                  },
                  "description": {
                    "description": "create the description of your project",
                    "type": "string"
                  },
                  "imageUrl": {
                    "description": "image of your project",
                    "type": "string"
                  },
                  "targetCost": {
                    "description": "The target amount",
                    "type": "number",
                    "format": "double"
                  },
                  "dateStarted": {
                    "description": "Date you started your project",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateEnded": {
                    "description": "The date your project will end",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "imageUrl",
                  "targetCost",
                  "dateStarted",
                  "dateEnded"
                ]
              }
            }
          }
        },
        "responses": {
          "responses": {
            "201": {
              "description": "Project created successfully",
              "content": {
                "application/json": {
                "schema": {
                  "type": "array",
                    "items": {
                      "success": true,
                      "$ref": "#/components/schemas/projects",
                      "message": "Project created succeessfully"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GeneralError"
                  },
                  "example": {
                    "code": "400",
                    "message": "Bad request"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GeneralError"
                  },
                  "example": {
                    "code": "400",
                    "message": "Bad request"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GeneralError"
                  },
                  "example": {
                    "code": "500",
                    "message": "Internal server error"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GeneralError"
                  },
                  "example": {
                    "code": "401",
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Sever error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "internal_code": "Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/farms/create-farm": {
      "post": {
        "tags": [
          "Farm"
        ],
        "summary": "Add a farm",
        "operationId": "createFarm",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "landTenure": {
                    "description": "Own land or Rental land",
                    "type": "string"
                  },
                  "landForm": {
                    "description": "Is you project slopy or flat",
                    "type": "string"
                  },
                  "images": {
                    "description": "images of your farm",
                    "type": "string",
                    "format": "binary"

                  },
                  "irrigationType": {
                    "description": "Eg. Drip, rainfall or overhead",
                    "type": "string"
                  },
                  "soilType": {
                    "description": "Eg. Loam or clay",
                    "type": "string"
                  },
                  "soilDepth": {
                    "description": "How deep is you soil?",
                    "type": "string"
                  },
                  "landSize": {
                    "description": "The size of your land in hectares or acres eg. 5 acres",
                    "type": "string"
                  },
                  "accessibility": {
                    "description": "Accessibility to the main road",
                    "type": "boolean"
                  },
                  "county": {
                    "description": "Where is your land located?",
                    "type": "string"
                  },
                  "longitude": {
                    "description": "Location",
                    "type": "string"
                  },
                  "latitude": {
                    "description": "Where is your land located?",
                    "type": "string"
                  }
                },
                "required": [
                  "images",
                  "landForm",
                  "landTenure",
                  "irrigationType",
                  "soilType",
                  "soilDepth",
                  "accessibility",
                  "landSize",
                  "county",
                  "longitude",
                  "latitude"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "landTenure": {
                    "description": "Own land or Rental land",
                    "type": "string"
                  },
                  "landForm": {
                    "description": "Is you project slopy or flat",
                    "type": "string"
                  },
                  "images": {
                    "description": "images of your farm",
                    "type": "string",
                    "format": "binary"

                  },
                  "irrigationType": {
                    "description": "Eg. Drip, rainfall or overhead",
                    "type": "string"
                  },
                  "soilType": {
                    "description": "Eg. Loam or clay",
                    "type": "string"
                  },
                  "soilDepth": {
                    "description": "How deep is you soil?",
                    "type": "string"
                  },
                  "landSize": {
                    "description": "The size of your land in hectares or acres eg. 5 acres",
                    "type": "string"
                  },
                  "accessibility": {
                    "description": "Accessibility to the main road",
                    "type": "boolean"
                  },
                  "county": {
                    "description": "Where is your land located?",
                    "type": "string"
                  },
                  "longitude": {
                    "description": "Location",
                    "type": "boolean"
                  },
                  "latitude": {
                    "description": "Where is your land located?",
                    "type": "string"
                  }
                },
                "required": [
                  "images",
                  "landForm",
                  "landTenure",
                  "irrigationType",
                  "soilType",
                  "soilDepth",
                  "accessibility",
                  "landSize",
                  "county",
                  "longitude",
                  "latitude"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Farm created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "success": true,
                    "$ref": "#/components/schemas/projects",
                    "message": "Project created succeessfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns all projects",
        "operationId": "getAllProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/skipParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of projects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/projects"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/farms/lists": {
      "get": {
        "tags": [
          "Farm"
        ],
        "summary": "Returns all farms",
        "operationId": "getAllFarms",
        "parameters": [
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/skipParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of farms.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/farms"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/project/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a single project",
        "operationId": "getProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched s single project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projects"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/project/{id}": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates a  single project",
        "operationId": "updateProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "create the title of the project",
                    "type": "string"
                  },
                  "description": {
                    "description": "create the description of your project",
                    "type": "string"
                  },
                  "imageUrl": {
                    "description": "image of your project",
                    "type": "string",
                    "format": "binary"
                  },
                  "targetCost": {
                    "description": "The target amount",
                    "type": "number",
                    "format": "double"
                  },
                  "dateStarted": {
                    "description": "Date you started your project",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateEnded": {
                    "description": "The date your project will end",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "imageUrl",
                  "targetCost",
                  "dateStarted",
                  "dateEnded"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "create the title of the project",
                    "type": "string"
                  },
                  "description": {
                    "description": "create the description of your project",
                    "type": "string"
                  },
                  "imageUrl": {
                    "description": "image of your project",
                    "type": "string"
                  },
                  "targetCost": {
                    "description": "The target amount",
                    "type": "number",
                    "format": "double"
                  },
                  "dateStarted": {
                    "description": "Date you started your project",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateEnded": {
                    "description": "The date your project will end",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "imageUrl",
                  "targetCost",
                  "dateStarted",
                  "dateEnded"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated a single project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projects"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/project/{projectid}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete a single project",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "projectid",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete a single project.",
            "content": {
              "application/json": {
                "schema": {
                  "type":"string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/farm/{farmId}": {
      "get": {
        "tags": [
          "Farm"
        ],
        "summary": "Returns a single farm",
        "operationId": "getFarm",
        "parameters": [
          {
            "name": "farmId",
            "in": "path",
            "description": "ID of the farm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched a single farm.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/farms"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/farm/{id}": {
      "put": {
        "tags": [
          "Farm"
        ],
        "summary": "Updates a single farm",
        "operationId": "updateFarm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the farm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "landTenure": {
                    "description": "Own land or Rental land",
                    "type": "string"
                  },
                  "landForm": {
                    "description": "Is you project slopy or flat",
                    "type": "string"
                  },
                  "images": {
                    "description": "images of your farm",
                      "type": "string",
                      "format": "binary"
                  },
                  "irrigationType": {
                    "description": "Eg. Drip, rainfall or overhead",
                    "type": "string"
                  },
                  "soilType": {
                    "description": "Eg. Loam or clay",
                    "type": "string"
                  },
                  "soilDepth": {
                    "description": "How deep is you soil?",
                    "type": "string"
                  },
                  "landSize": {
                    "description": "The size of your land in hectares or acres eg. 5 acres",
                    "type": "string"
                  },
                  "accessibility": {
                    "description": "Accessibility to the main road",
                    "type": "boolean"
                  },
                  "county": {
                    "description": "Where is your land located?",
                    "type": "string"
                  },
                  "longitude": {
                    "description": "Location",
                    "type": "string"
                  },
                  "latitude": {
                    "description": "Where is your land located?",
                    "type": "string"
                  }
                },
                "required": [
                  "images",
                  "landForm",
                  "landTenure",
                  "irrigationType",
                  "soilType",
                  "soilDepth",
                  "accessibility",
                  "landSize",
                  "county",
                  "longitude",
                  "latitude"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "landTenure": {
                    "description": "Own land or Rental land",
                    "type": "string"
                  },
                  "landForm": {
                    "description": "Is you project slopy or flat",
                    "type": "string"
                  },
                  "images": {
                    "description": "images of your farm",
                    "type": "string",
                    "format": "binary"
                  },
                  "irrigationType": {
                    "description": "Eg. Drip, rainfall or overhead",
                    "type": "string"
                  },
                  "soilType": {
                    "description": "Eg. Loam or clay",
                    "type": "string"
                  },
                  "soilDepth": {
                    "description": "How deep is you soil?",
                    "type": "string"
                  },
                  "landSize": {
                    "description": "The size of your land in hectares or acres eg. 5 acres",
                    "type": "string"
                  },
                  "accessibility": {
                    "description": "Accessibility to the main road",
                    "type": "boolean"
                  },
                  "county": {
                    "description": "Where is your land located?",
                    "type": "string"
                  },
                  "longitude": {
                    "description": "Location",
                    "type": "string"
                  },
                  "latitude": {
                    "description": "Where is your land located?",
                    "type": "string"
                  }
                },
                "required": [
                  "images",
                  "landForm",
                  "landTenure",
                  "irrigationType",
                  "soilType",
                  "soilDepth",
                  "accessibility",
                  "landSize",
                  "county",
                  "longitude",
                  "latitude"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated a single farm.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/farms"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/farm/delete/{farmid}": {
      "delete": {
        "tags": [
          "Farm"
        ],
        "summary": "Deletes a single farm",
        "operationId": "deleteFarm",
        "parameters": [
          {
            "name": "farmid",
            "in": "path",
            "description": "ID of the farm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete a single farm.",
            "content": {
              "application/json": {
                "schema": {
                  "type":"string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/{projectId}/payments/b2c/requestPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Farmer Automatic Withdraw",
        "operationId": "withdrawFarmerMoney",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "Enter Phone number you wish yor to be sent to",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Enter Amount you wish to withdraw",
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "phone",
                  "amount"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "Enter Phone number you wish your money to be sent to",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Enter Amount you wish to withdraw",
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "phone",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Withrawn successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "phone": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        }
                      }
                    },
                    "message": "Withdrawn succeessfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/{projectId}/payments/c2b/simulate": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Invest Automatic through Mpesa",
        "operationId": "investMoney",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "Enter Phone number you wish to deposit with",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Enter Amount you wish to invest",
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "phone",
                  "amount"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "Enter Phone number you wish to deposit with",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Enter Amount you wish to invest",
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "phone",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deposited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "phone": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        }
                      }
                    },
                    "message": "Deposited succeessfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/payments/c2b/register": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Register C2B URLS",
        "operationId": "registerUrls",
        "responses": {
          "200": {
            "description": "Registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "success": true,
                    "message": "Registered succeessfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "400",
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  }
}
